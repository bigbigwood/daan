<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="daan.domain.repository" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="Initbasic_Repo" type="daan.domain.Initbasic,daan.domain" />
  </alias>
  <!--
  implementation="MEMORY"是设置缓存的实现方式，可以指定LRU、FIFO等，有点类似于内存的页替换策略。MEMORY是最常使用的一种方式。
  flushOnExecute设置的是当执行了这些语句时更新缓存  readOnly="false" serialize="true"
  -->
  <cacheModels>
    <cacheModel id="Initbasic-cache"  implementation="MEMORY" >
      <flushInterval minutes="5"/>
      <flushOnExecute  statement="Dict.InsertInitbasic"/>
      <flushOnExecute  statement="Dict.UpdateInitbasic"/>
      <flushOnExecute  statement="Dict.DeleteInitbasic"/>
      <property name="Type" value="Weak"/>
    </cacheModel>
  </cacheModels>
  
  <resultMaps>
    <resultMap id="InitbasicResult" class="daan.domain.Initbasic">
      <result property="Basicid" column="BASICID" />
      <result property="Basictype" column="BASICTYPE" type="string" dbType="varchar"/>
      <result property="Basicvalue" column="BASICVALUE" type="string" dbType="varchar"/>
      <result property="Basicname" column="BASICNAME" type="string" dbType="varchar"/>
      <result property="Remark" column="REMARK" type="string" dbType="varchar"/>
      <result property="Fastcode" column="FASTCODE" type="string" dbType="varchar"/>
    </resultMap>
  </resultMaps>
  <statements>
    
    <select id="PrintingSystem.Dict.GetInitbasicInfoByType" parameterClass="Hashtable" cacheModel="Initbasic-cache">
      SELECT Basicid,Basictype,Basicvalue,Basicname,Remark,Fastcode  FROM Initbasic WHERE 1=1
      <isNotEmpty prepend="and" parameterClass="strKey" >
        Basictype like '%$strKey$%'
      </isNotEmpty>
    </select>

    <!--按基本资料类型查询-->
    <select id="PrintingSystem.Dict.GetInitbasicLst" parameterClass="string" ResultMap="InitbasicResult" cacheModel="Initbasic-cache">
      SELECT Basicid,Basictype,Basicvalue,Basicname,Remark,Fastcode  FROM Initbasic WHERE 1=1
      <isNotEmpty prepend="and" parameterClass="string">
        Basictype=#value#
      </isNotEmpty>
      order by Basicvalue
    </select>
    
    <select id="PrintingSystem.Dict.GetInitbasicInfoByTypeAndByValue" parameterClass="Hashtable" cacheModel="Initbasic-cache">
      SELECT Basicid,Basictype,Basicvalue,Basicname,Remark,Fastcode  FROM Initbasic WHERE 1=1
      <isNotEmpty prepend="and" parameterClass="strKey">
        Basictype like '%LABDEPTTYPE%' and Basicvalue like  '%$strKey$%'
      </isNotEmpty>
    </select>
    
    <insert id="PrintingSystem.Dict.InsertInitbasic" parameterClass="Initbasic_Repo">
      INSERT INTO Initbasic
      (Basicid,Basictype,Basicvalue,Basicname,Remark,Fastcode)
      VALUES(#Basicid#,#Basictype#,#Basicvalue#,#Basicname#,#Remark#,#Fastcode#)
    </insert>
    <update id="PrintingSystem.Dict.UpdateInitbasic" parameterClass="Initbasic_Repo">
      UPDATE Initbasic
      SET Basicid=#Basicid#,Basicid=#Basictype#,Basicid=#Basicvalue#,Basicid=#Basicname#,Basicid=#Remark#,Basicid=#Fastcode#
      WHERE Basicid = #Basicid#
    </update>
    <delete id="PrintingSystem.Dict.DeleteInitbasic" parameterClass="string">
      DELETE FROM Initbasic
      WHERE Basicid = #value#
    </delete>
  </statements>
</sqlMap>
