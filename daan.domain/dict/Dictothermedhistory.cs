/*
insert license info here
*/
using System;

namespace daan.domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class Dictothermedhistory:BaseDomain
	{
		#region Private Members
		private bool isChanged;
		private bool isDeleted;
		private double? dictothermedhistoryid; 
		private double? dictmemberid; 
		private string remark; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Dictothermedhistory()
		{
			dictothermedhistoryid = null; 
			dictmemberid = null; 
			remark = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 其它病史主键
		/// </summary>	
		[LogInfo("其它病史主键")]
		public double? Dictothermedhistoryid
		{
			get { return dictothermedhistoryid; }
			set { isChanged |= (dictothermedhistoryid != value); dictothermedhistoryid = value; }
		}
			
		/// <summary>
		/// 会员ID
		/// </summary>	
		[LogInfo("会员ID")]
		public double? Dictmemberid
		{
			get { return dictmemberid; }
			set { isChanged |= (dictmemberid != value); dictmemberid = value; }
		}
			
		/// <summary>
		/// 药物过敏史
		/// </summary>	
		[LogInfo("药物过敏史")]
		public string Remark
		{
			get { return remark; }
			set	
			{
				if( value!= null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				isChanged |= (remark != value); remark = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			isDeleted = true;
			isChanged = true;
		}
		
		#endregion
		
		
	}
}
