/*
insert license info here
*/
using System;

namespace daan.domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class Billhead:BaseDomain  
	{
		#region Private Members
		private bool isChanged;
		private bool isDeleted;
		private double? billheadid; 
		private double? dictlabid; 
		private string invoiceno; 
		private string status; 
		private string remark; 
		private DateTime createdate; 
		private double? billby; 
		private DateTime? duedate; 
		private string receipno; 
		private double? dictcustomerid; 
		private string customertype; 
		private string billtype; 
		private double? dictcheckbillid; 
		private double? totalsendourprice; 
		private double? totalfinalprice; 
		private double? totalcontractprice; 
		private double? totalgrouprprice; 
		private double? totalstandardprice;
        private DateTime? begindate;
        private DateTime? enddate;

        private DateTime? orderenterdate;
        private string customername;
        private string salename;

        #region 现金接收查询时需要字段
        private string realname;
        private string username;//by fhp
        private string ordernum;
        private string testname;
        private string selfremark;
        private double? testcount;
        private string productname;
        private double? billdetailid;
        #endregion

        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
		/// default constructor
		/// </summary>
		public Billhead()
		{
			billheadid = null; 
			dictlabid = null; 
			invoiceno = null; 
			status = null; 
			remark = null; 
			createdate = new DateTime(); 
			billby = null; 
			duedate = null; 
			receipno = null; 
			dictcustomerid = null; 
			customertype = null; 
			billtype = null; 
			dictcheckbillid = null; 
			totalsendourprice = null; 
			totalfinalprice = null; 
			totalcontractprice = null; 
			totalgrouprprice = null; 
			totalstandardprice = null;
            begindate = null;
            enddate = null;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties

        /// <summary>
        /// 账单明细编号：现金接收时用
        /// </summary>
        public double? Billdetailid
        {
            get { return billdetailid; }
            set { billdetailid = value; }
        }
        /// <summary>
        /// 订单录入时间
        /// </summary>
        public DateTime? Orderenterdate
        {
            get { return orderenterdate; }
            set { orderenterdate = value; }
        }

        /// <summary>
        /// 客户名称
        /// </summary>
        public string Customername
        {
            get { return customername; }
            set { customername = value; }
        }

        /// <summary>
        /// 销售人员
        /// </summary>
        public string Salename
        {
            get { return salename; }
            set { salename = value; }
        }

        #region  现金接收查询时需要字段
        /// <summary>
        /// 真实姓名
        /// </summary>
        public string Realname
        {
            get { return realname; }
            set { realname = value; }

        }
        /// <summary>
        /// 受理人名称
        /// </summary>
        public string Username//by fhp
        {
            get { return username; }
            set { username = value; }

        }
        /// <summary>
        /// 体检流水号
        /// </summary>
        public string Ordernum
        {
            get { return ordernum; }
            set { ordernum = value; }
        }
        /// <summary>
        /// 项目名称
        /// </summary>
        public string Testname
        {
            get { return testname; }
            set { testname = value; }
        }
        /// <summary>
        /// 备注说明
        /// </summary>
        public string Selfremark
        {
            get { return selfremark; }
            set { selfremark = value; }
        }
        /// <summary>
        /// 项目数
        /// </summary>
        public double? Testcount
        {
            get { return testcount; }
            set { testcount = value; }
        }
        /// <summary>
        /// 套餐名
        /// </summary>
        public string Productname
        {
            get { return productname; }
            set { productname = value; }
        }
        #endregion 


		/// <summary>
		/// 主键，自增长
		/// </summary>	
		[LogInfo("主键，自增长")]
		public double? Billheadid
		{
			get { return billheadid; }
			set { isChanged |= (billheadid != value); billheadid = value; }
		}
			
		/// <summary>
		/// 分点实验室ID
		/// </summary>	
		[LogInfo("分点实验室ID")]
		public double? Dictlabid
		{
			get { return dictlabid; }
			set { isChanged |= (dictlabid != value); dictlabid = value; }
		}
			
		/// <summary>
		/// 清单号
		/// </summary>	
		[LogInfo("清单号")]
		public string Invoiceno
		{
			get { return invoiceno; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Invoiceno", value, value.ToString());
				
				isChanged |= (invoiceno != value); invoiceno = value;
			}
		}
			
		/// <summary>
		/// 状态值，0 预出账 、9 已作废、 1  已接收
		/// </summary>	
		[LogInfo("状态值，0 预出账 、9 已作废、 1  已接收")]
		public string Status
		{
			get { return status; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Status", value, value.ToString());
				
				isChanged |= (status != value); status = value;
			}
		}
			
		/// <summary>
		/// 备注
		/// </summary>	
		[LogInfo("备注")]
		public string Remark
		{
			get { return remark; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				isChanged |= (remark != value); remark = value;
			}
		}
			
		/// <summary>
		/// 账单生成日期
		/// </summary>	
		[LogInfo("账单生成日期")]
		public DateTime Createdate
		{
			get { return createdate; }
			set { isChanged |= (createdate != value); createdate = value; }
		}
			
		/// <summary>
		/// 账单生成人
		/// </summary>	
		[LogInfo("账单生成人")]
		public double? Billby
		{
			get { return billby; }
			set { isChanged |= (billby != value); billby = value; }
		}
			
		/// <summary>
		/// 收款时间
		/// </summary>	
		[LogInfo("收款时间")]
		public DateTime? Duedate
		{
			get { return duedate; }
			set { isChanged |= (duedate != value); duedate = value; }
		}
			
		/// <summary>
		/// 发票号
		/// </summary>	
		[LogInfo("发票号")]
		public string Receipno
		{
			get { return receipno; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Receipno", value, value.ToString());
				
				isChanged |= (receipno != value); receipno = value;
			}
		}
			
		/// <summary>
		/// 顾客ID
		/// </summary>	
		[LogInfo("顾客ID")]
		public double? Dictcustomerid
		{
			get { return dictcustomerid; }
			set { isChanged |= (dictcustomerid != value); dictcustomerid = value; }
		}
			
		/// <summary>
		/// 0-常规客户  1-外包客户
		/// </summary>	
		[LogInfo("0-常规客户  1-外包客户")]
		public string Customertype
		{
			get { return customertype; }
			set	
			{
				if( value!= null && value.Length > 1)
					throw new ArgumentOutOfRangeException("Invalid value for Customertype", value, value.ToString());
				
				isChanged |= (customertype != value); customertype = value;
			}
		}
			
		/// <summary>
		/// 账单类型 ： 团检账单   ，个检账单
		/// </summary>	
		[LogInfo("账单类型 ： 团检账单   ，个检账单")]
		public string Billtype
		{
			get { return billtype; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Billtype", value, value.ToString());
				
				isChanged |= (billtype != value); billtype = value;
			}
		}
			
		/// <summary>
		/// 财务清单核对人，来源于DICTUSER
		/// </summary>	
		[LogInfo("财务清单核对人，来源于DICTUSER")]
		public double? Dictcheckbillid
		{
			get { return dictcheckbillid; }
			set { isChanged |= (dictcheckbillid != value); dictcheckbillid = value; }
		}
			
		/// <summary>
		/// 外包送出价汇总
		/// </summary>	
		[LogInfo("外包送出价汇总")]
		public double? Totalsendourprice
		{
			get { return totalsendourprice; }
			set { isChanged |= (totalsendourprice != value); totalsendourprice = value; }
		}
			
		/// <summary>
		/// 实收价汇总
		/// </summary>	
		[LogInfo("实收价汇总")]
		public double? Totalfinalprice
		{
			get { return totalfinalprice; }
			set { isChanged |= (totalfinalprice != value); totalfinalprice = value; }
		}
			
		/// <summary>
		/// 应收价汇总
		/// </summary>	
		[LogInfo("应收价汇总")]
		public double? Totalcontractprice
		{
			get { return totalcontractprice; }
			set { isChanged |= (totalcontractprice != value); totalcontractprice = value; }
		}
			
		/// <summary>
		/// 分点价汇总
		/// </summary>	
		[LogInfo("分点价汇总")]
		public double? Totalgrouprprice
		{
			get { return totalgrouprprice; }
			set { isChanged |= (totalgrouprprice != value); totalgrouprprice = value; }
		}
        /// <summary>
        /// 此账单的时间段-开始时间
        /// </summary>	
        [LogInfo("此账单的时间段-开始时间")]
        public DateTime? Begindate
        {
            get { return begindate; }
            set { isChanged |= (begindate != value); begindate = value; }
        }
        /// <summary>
        /// 此账单的时间段-结束时间
        /// </summary>
        [LogInfo("此账单的时间段-结束时间")]
        public DateTime? Enddate
        {
            get { return enddate; }
            set { isChanged |= (enddate != value); enddate = value; }
        }
			
		/// <summary>
		/// 标准价汇总
		/// </summary>	
		[LogInfo("标准价汇总")]
		public double? Totalstandardprice
		{
			get { return totalstandardprice; }
			set { isChanged |= (totalstandardprice != value); totalstandardprice = value; }
		}
        /// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			isDeleted = true;
			isChanged = true;
		}
		
		#endregion
		
		
	}
}
